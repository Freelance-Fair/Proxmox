#!/usr/bin/env php
<?php

if ($_ENV === []) {
	$_ENV = getenv();
}

use Proxmox\Command\CommandBuild;
use Proxmox\Command\CommandCopy;
use Proxmox\Command\CommandDestroy;
use Proxmox\Command\CommandExecute;
use Proxmox\Command\CommandListVMs;
use Proxmox\Command\CommandUpstreamDeploy;
use Proxmox\Command\CommandUpstreamGenerate;
use Proxmox\Controller\CommandController;
use Proxmox\Controller\ProxmoxController;
use Proxmox\Proxmox;

include_once dirname(__DIR__, 3) . '/autoload.php';

$commandController = new CommandController();
$commandController->setSetting('proxmox', [
	'endpoint' => $commandController->getArgument('endpoint') ?? $_ENV['PROXMOX_ENDPOINT'] ?? '',
	'token' => $commandController->getArgument('token') ?? $_ENV['PROXMOX_TOKEN'] ?? '',
]);
$commandController->setSetting('build', [
	'targetNode' => $commandController->getArgument('target-node') ?? $_ENV['PROXMOX_TARGET_NODE'] ?? 'pve3',
	'template' => $commandController->getArgument('template') ?? $_ENV['PROXMOX_TEMPLATE'] ?? 'template-current-live-v2',
	'namePrefix' => $commandController->getArgument('name-prefix') ?? $_ENV['PROXMOX_NAME_PREFIX'] ?? 'feature-',
	'hostTemplate' => $commandController->getArgument('host-template') ?? $_ENV['PROXMOX_HOST_TEMPLATE'] ?? '',
	'network' => $commandController->getArgument('network') ?? $_ENV['PROXMOX_NETWORK'] ?? '',
	'ipPool' => $commandController->getArgument('ip-pool') ?? $_ENV['PROXMOX_IP_POOL'] ?? '',
	'upstream' => $commandController->getArgument('upstream') ?? $_ENV['PROXMOX_UPSTREAM'] ?? 'feature',
]);

$proxmox = new Proxmox($commandController->getSetting('proxmox.endpoint'));
$proxmox->setToken($commandController->getSetting('proxmox.token'));

$proxmoxController = new ProxmoxController($commandController->getSetting('build.targetNode'), $commandController->getSetting('build.network'));
$proxmoxController->setProxmox($proxmox);
$proxmoxController->addToIpPool($commandController->getSetting('build.ipPool'));

$commandController->addCommand(new CommandListVMs($proxmoxController));
$commandController->addCommand(new CommandBuild($proxmoxController));
$commandController->addCommand(new CommandDestroy($proxmoxController));
$commandController->addCommand(new CommandExecute($proxmoxController));
$commandController->addCommand(new CommandCopy($proxmoxController));
$commandController->addCommand(new CommandUpstreamGenerate($proxmoxController));
$commandController->addCommand(new CommandUpstreamDeploy($proxmoxController));

$commandController->runCommand($commandController->getArgument('action'));
